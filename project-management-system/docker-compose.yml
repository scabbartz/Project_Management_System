services:
  # PostgreSQL Database
  postgres_db:
    image: postgres:15-alpine
    container_name: pms_postgres_db
    environment:
      POSTGRES_DB: pms_dev_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pms_dev_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pms_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pms_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: project-management-system-server:latest
    container_name: pms_server
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: pms_dev_db
      DB_USER: admin
      DB_PASSWORD: secret
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pms_network
    volumes:
      - ./server/logs:/usr/src/app/logs
    restart: unless-stopped

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: pms_client
    environment:
      REACT_APP_API_BASE_URL: http://localhost:3001/api
      REACT_APP_ENVIRONMENT: development
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - pms_network
    restart: unless-stopped

networks:
  pms_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
